@model List<FBPlusOneBuy.ViewModels.GroupOrderDetailViewModel>
@{
    Layout = "~/Views/Shared/Main_Layout.cshtml";

}
<a class="h4 font-weight-normal text-muted" href="@Url.Action("Index","Report")">查詢活動</a>
<span>/</span>
<a class="h4 font-weight-normal text-muted" href="@Url.Action("Linelist","Report")">活動清單</a>
<span>/</span>
<a class="h4 font-weight-normal text-muted" href="@Url.Action("GroupOrderList","Report",new { campaignID=ViewBag.campaignID})">訂單</a>
<span>/</span>
<span class="h4 font-weight-normal text-muted"><strong>明細</strong></span>

<div class="row m-3">
    <div class="col">
        <p>
            @Html.DisplayNameFor(Model => Model.FirstOrDefault().NumberOfProduct):
            @Html.DisplayFor(Model => Model.FirstOrDefault().NumberOfProduct)
        </p>
        <p>
            @Html.DisplayNameFor(Model => Model.FirstOrDefault().Amount):
            @Html.DisplayFor(Model => Model.FirstOrDefault().Amount)
        </p>
    </div>
    <div class="col">
        <canvas id="line-chart" width="700" height="200"></canvas>
    </div>
</div>
<table id="myTable" class="cell-border compact stripe" style="width:100%">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(Model =>Model.FirstOrDefault().GroupOrderDetailID)</th>
            <th>@Html.DisplayNameFor(Model => Model.FirstOrDefault().Name)</th>
            <th>@Html.DisplayNameFor(Model => Model.FirstOrDefault().ProductName)</th>
            <th>@Html.DisplayNameFor(Model => Model.FirstOrDefault().UnitPrice)</th>
            <th>@Html.DisplayNameFor(Model => Model.FirstOrDefault().Quantity)</th>
            <th>@Html.DisplayNameFor(Model => Model.FirstOrDefault().MessageDateTime)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(Model => item.GroupOrderDetailID)
            </td>
            <td>
                @Html.DisplayFor(Model => item.Name)
            </td>
            <td>
                @Html.DisplayFor(Model => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(Model => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(Model => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(Model => item.MessageDateTime)
            </td>
        </tr>
        }
    </tbody>
</table>
@section EndJS
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.10/vue.min.js"
            integrity="sha256-chlNFSVx3TdcQ2Xlw7SvnbLAavAQLO0Y/LBiWX04viY=" crossorigin="anonymous"></script>
    <!-- DataTable -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css">
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#myTable').DataTable({
                "info": false, "bLengthChange": false, "pageLength": 10
            });
            $.ajax({
                type: "POST",
                url: "/Chart/GroupOrderDetailChart",
                data: { GroupOrderID: '@ViewBag.GroupOrderID' },
                success: function (data) {                   
                    chart(data)
                }              
            });
            function chart(data) {
                var price = data.price
                var name = data.name
                var dateTime=data.dateTime;
                var qty=data.qty;
                new Chart(document.getElementById("line-chart"), {
              type: 'line',
              data: {
                labels: dateTime,
                datasets: [{
                    data: qty,
                    borderColor: "#3e95cd",
                    fill: false
                  }]
              },
              options: {
                title: {
                    display: true,
                    text: '團購數量與金額'
                  },
                legend: {
                     display: false
                  },
                  scales: {
                    xAxes: [{
                          ticks: {
                            maxRotation: 0
                          }
                        }],
                      yAxes: [{
                          ticks: {
                              min:0,
                              stepSize: 1
                          }
                      }]
                  },
                tooltips: {
                      callbacks: {
                          label: function (tooltipItem) {
                              var index = tooltipItem.index;
                              return "數量:" + Number(tooltipItem.yLabel) + " 金額:$" + price[index] + " 顧客:" + name[index];
                            }
                        }
                  }
              }
            });
            }           
        });
    </script>
}


