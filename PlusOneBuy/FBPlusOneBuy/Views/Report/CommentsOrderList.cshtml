@model List<FBPlusOneBuy.ViewModels.CommentOrderLIstViewModel>
@{
    ViewBag.Title = "CommentsOrderList";
    Layout = "~/Views/Shared/Main_Layout.cshtml";
    FBPlusOneBuy.ViewModels.ReportViewModel LivePost = ViewData["LivePost"] as FBPlusOneBuy.ViewModels.ReportViewModel;
}
<span class="h4 font-weight-normal text-muted">查詢活動</span>
<span>/</span>
<a class="h4 font-weight-normal text-muted" href="@Url.Action("Index","Report")">社群</a>
<span>/</span>
<a class="h4 font-weight-normal text-muted" href="@Url.Action("Fblist","Report")">直播清單</a>
<span>/</span>
<span class="h4 font-weight-normal text-muted"><strong>留言訂單</strong></span>

<div class="row mt-3">
    <div class="col-4">
        <span>直播編號:<br/>@LivePost.LivePageID</span><br />
        <span>直播名稱:@LivePost.LiveName</span><br />
        <span>開始時間:@LivePost.postTime</span><br />
        <span>結束時間:@LivePost.endTime</span><br />
        <span>收單數量:@LivePost.QtyOfOrders</span><br />
        <span>收單金額:@String.Format("{0:N0}", @LivePost.Amount)</span>
    </div>
    <div class="col-8">
        <canvas id="line-chart" style="width:100%;height:80%;"></canvas>
    </div>
</div>
<table id="myTable" class="cell-border compact stripe" style="width:100%">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().OrderID)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().CustomerName)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().ProductName)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Quantity)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().UnitPrice)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Amount)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().OrderDateTime)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(model => item.OrderID)
                </td>
                <td>
                    @Html.DisplayFor(model => item.CustomerName)
                </td>
                <td>
                    @Html.DisplayFor(model => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(model => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(model => item.UnitPrice)
                </td>
                <td>
                    @Html.DisplayFor(model => item.Amount)
                </td>
                <td>
                    @Html.DisplayFor(model => item.OrderDateTime)
                </td>
            </tr>
        }

    </tbody>
</table>
@section EndJS
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.10/vue.min.js"
            integrity="sha256-chlNFSVx3TdcQ2Xlw7SvnbLAavAQLO0Y/LBiWX04viY=" crossorigin="anonymous"></script>
    <!-- DataTable -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css">
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
            var fbchart;
            $('#myTable').DataTable({
                "info": false, "bLengthChange": false, "pageLength": 10
            });
            $.ajax({
                type: "POST",
                url: "/Chart/FbOrderChart",
                data: { liveId: '@ViewBag.liveId' },
                success: function (result) {
                    chart(result)   
                }
            }).done(function () {
                $.ajax({
                type: "GET",
                url: "/Chart/GetViewers",
                data: { liveID: '@ViewBag.liveId' },
                success: function (result) {
                    if (result != null) {
                             var group = 12; //幾個一組
                    var parseResult = JSON.parse(result);
                    var viewChart = [];
                    var index = 0;
                    for (var i = 0; i < parseResult.length; i++) {
                        index = Math.ceil((i + 1) / group) - 1;
                        if (isNaN(viewChart[index])) {
                            viewChart[index] = 0;
                        }
                        viewChart[index] += parseResult[i];
                    }
                    viewChart.unshift(0)
                        viewChart.forEach(function (element) {
                            var avg = Math.round(element / group)
                        fbchart.data.datasets[1].data.push(avg);
                    });
                    fbchart.update();
                         }
                }
            });
            });   
            
            function chart(data) {
                fbchart=new Chart(document.getElementById("line-chart"), {
                  type: 'line',
                  data: {
                    labels: data.datetime,
                    datasets: [{
                        data: data.sum,
                        borderColor: "#F8C471",
                        fill: false
                    },{
                        data: [],
                        borderColor: "#84c1ff",
                        fill: false
                      }

                    ]
                  },
              options: {
                title: {
                    display: true,
                    text: '留言數量與觀看人數'
                  },
                legend: {
                     display: false
                  },
                  scales: {
                    xAxes: [{
                          ticks: {
                            maxRotation: 0
                          }
                        }],
                      yAxes: [{
                          ticks: {
                              min:0,
                              stepSize: 1
                          }
                      }]
                  },
              }
            });
            }            
        });
        
    </script>
}
